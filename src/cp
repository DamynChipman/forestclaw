fclaw2d_patch.cpp:    return (ClawPatch*) pdata->user_patch;
fclaw2d_patch.cpp:    pdata->face_neighbors[iface] = face_type;
fclaw2d_patch.cpp:    pdata->corner_neighbors[icorner] = corner_type;
fclaw2d_patch.cpp:    pdata->corners[icorner] = 1;
fclaw2d_patch.cpp:    pdata->corners[icorner] = 0;
fclaw2d_patch.cpp:    FCLAW_ASSERT(pdata->neighbors_set != 0);
fclaw2d_patch.cpp:    return pdata->face_neighbors[iface];
fclaw2d_patch.cpp:    FCLAW_ASSERT(pdata->corners[icorner] != 0);
fclaw2d_patch.cpp:    FCLAW_ASSERT(pdata->neighbors_set != 0);
fclaw2d_patch.cpp:    return pdata->corner_neighbors[icorner];
fclaw2d_patch.cpp:    return !pdata->corners[icorner];
fclaw2d_patch.cpp:    FCLAW_ASSERT(pdata->neighbors_set == 0);
fclaw2d_patch.cpp:    pdata->neighbors_set = 1;
fclaw2d_patch.cpp:    pdata->has_finegrid_neighbors = 0;
fclaw2d_patch.cpp:    pdata->on_coarsefine_interface = 0;
fclaw2d_patch.cpp:            pdata->on_coarsefine_interface = 1;
fclaw2d_patch.cpp:                pdata->has_finegrid_neighbors = 1;
fclaw2d_patch.cpp:                pdata->on_coarsefine_interface = 1;
fclaw2d_patch.cpp:                    pdata->has_finegrid_neighbors = 1;
fclaw2d_patch.cpp:    pdata->neighbors_set = 0;
fclaw2d_patch.cpp:    return pdata->neighbors_set;
fclaw2d_patch.cpp:    return pdata->has_finegrid_neighbors;
fclaw2d_patch.cpp:    return pdata->on_coarsefine_interface;
fclaw2d_patch.cpp:    pdata->cp = cp;
fclaw2d_patch.cpp:    pdata->neighbors_set = 0;
fclaw2d_patch.cpp:        delete pdata->cp;
