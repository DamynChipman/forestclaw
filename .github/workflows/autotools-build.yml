name: ForestClaw Build
on: [push]
env:
  CFLAGS: -lgfortran
  CXXFLAGS: -lgfortran
  FFLAGS: -lgfortran
jobs:
  serial_minimal_build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libblas-dev liblapack-dev
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure
    - name: Build
      run: make
    - name: Tests
      run: make check
  serial_build_with_clawpack_enabled:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libblas-dev liblapack-dev
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-clawpack
    - name: Build
      run: make
    - name: Tests
      run: make check
  serial_build_with_geoclaw_enabled:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libblas-dev liblapack-dev
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-geoclaw
    - name: Build
      run: make
    - name: Tests
      run: make check
  serial_build_with_cudaclaw_enabled:
    runs-on: ubuntu-20.04
    env:
      CUDA_PATH: /usr
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libblas-dev liblapack-dev nvidia-cuda-toolkit
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-cudaclaw
    - name: Build
      run: make
  mpi_minimal_build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libopenmpi-dev openmpi-bin libblas-dev liblapack-dev
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-mpi
    - name: Build
      run: make
    - name: Tests
      run: make check
  mpi_build_with_clawpack_enabled:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libopenmpi-dev openmpi-bin libblas-dev liblapack-dev
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-clawpack --enable-mpi
    - name: Build
      run: make
    - name: Tests
      run: make check
    - name: Upload Binaries
      uses: actions/upload-artifact@v2
      with:
        name: clawpack_binaries
        path: applicaitons/clawpack
  mpi_build_with_geoclaw_enabled:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libopenmpi-dev openmpi-bin libblas-dev liblapack-dev
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-geoclaw --enable-mpi
    - name: Build
      run: make
    - name: Tests
      run: make check
  mpi_build_with_cudaclaw_enabled:
    runs-on: ubuntu-20.04
    env:
      CUDA_PATH: /usr
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install libopenmpi-dev openmpi-bin libblas-dev liblapack-dev nvidia-cuda-toolkit
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-cudaclaw --enable-mpi
    - name: Build
      run: make
  mpi_build_with_thunderegg_enabled:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: ThunderEgg/ThunderEgg
        ref: develop
        path: ThunderEggSrc
    - name: Install dependencies
      run: |
        sudo apt-get install cmake libfftw3-dev libopenmpi-dev libp4est-dev openmpi-bin libblas-dev liblapack-dev 
    - name: Install ThunderEgg
      run: |
        cd ThunderEggSrc
        cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/ThunderEgg/ .
        make install
    - name: Init and Update Submodules
      run: |
        git submodule init
        git submodule update
    - name: Run bootstrap Script
      run: ./bootstrap
    - name: Configure
      run: ./configure --enable-mpi --enable-thunderegg --with-thunderegg=$GITHUB_WORKSPACE/ThunderEgg
    - name: Build
      run: make
    - name: Tests
      run: make check
  clawpack_advection_2d_annulus:
    needs: mpi_build_with_clawpack_enabled
    runs-on: ubuntu-20.04
    steps:
    - name: Run Test
      run: |
        cd applications/clawpack/advection/2d/annulus
        mpirun -n 2 ./annulus -F regression.ini